[
    {
        "id": "c84cf3b562c0c5b4",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1de8c4ca5543366e",
        "type": "mqtt in",
        "z": "c84cf3b562c0c5b4",
        "name": "",
        "topic": "plot_2",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "bb0b5df2fcd96697",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 700,
        "wires": [
            [
                "9893579c37d79009",
                "c81072111f5f0f4b",
                "6eaef0213ea1ff57",
                "23fb39597ad47786",
                "e6e716a573f78ece"
            ]
        ]
    },
    {
        "id": "9893579c37d79009",
        "type": "function",
        "z": "c84cf3b562c0c5b4",
        "name": "Extract Temperature",
        "func": "var input = msg.payload; \nvar mean = 0;\n\ninput = input.trim();\n\n\nvar values = input.split(',');\n\nvalues = values.map(function (value){\n    return parseFloat(value.trim());\n});\nmean = (values[0] + values[1])/2;\nmsg.payload = mean; \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "c81072111f5f0f4b",
        "type": "function",
        "z": "c84cf3b562c0c5b4",
        "name": "Extract Humidity",
        "func": "var input = msg.payload; \nvar mean = 0;\ninput = input.trim();\nvar values = input.split(',');\n\nvalues = values.map(function (value){\n    return parseFloat(value.trim());\n});\nmean = (values[2] +values[3])/2;\nmsg.payload = mean; \n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "6eaef0213ea1ff57",
        "type": "function",
        "z": "c84cf3b562c0c5b4",
        "name": "moisture",
        "func": "var input = msg.payload; \nvar mean =0;\ninput = input.trim();\n\nvar values = input.split(',');\n\nvalues = values.map(function (value){\n    return parseFloat(value.trim());\n});\nmean = (values[4] +values[5]+ values[6]+values[7]+values[8])/5;\nvar analog_val = 4095-mean;\nvar persentage = (analog_val/4095)*100;\nvar mo = persentage;\nconst moisture = mo;\nmsg.payload = {moisture:moisture, mo:mo}; // set the output playload\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 800,
        "wires": [
            [
                "f751d9112b136502"
            ]
        ]
    },
    {
        "id": "23fb39597ad47786",
        "type": "debug",
        "z": "c84cf3b562c0c5b4",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 800,
        "wires": []
    },
    {
        "id": "c8ad76fc592839f4",
        "type": "mqtt out",
        "z": "c84cf3b562c0c5b4",
        "name": "",
        "topic": "valve_2",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "bb0b5df2fcd96697",
        "x": 1340,
        "y": 920,
        "wires": []
    },
    {
        "id": "4ed685e05bf494bd",
        "type": "function",
        "z": "c84cf3b562c0c5b4",
        "name": "penmann equation",
        "func": "const R_n = msg.payload.R_n;    \nconst G = msg.payload.G;       \nconst T = msg.payload.T;       \nconst u_2 = msg.payload.u_2;   \nconst e_s = msg.payload.e_s;   \nconst e_a = msg.payload.e_a;   \nconst Delta = msg.payload.Delta; \nconst gamma = msg.payload.gamma; \n\n\nconst numerator = (0.408 * Delta * (R_n - G)) + (gamma * (900 / (T + 273)) * u_2 * (e_s - e_a));\nconst denominator = Delta + gamma * (1 + 0.34 * u_2);\nconst ET0 = numerator / denominator;\n\nmsg.payload.ET0 = ET0; \nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 920,
        "wires": [
            [
                "f751d9112b136502",
                "5c183cc1cd465b88"
            ]
        ]
    },
    {
        "id": "c8145ae9a2c0f24b",
        "type": "http request",
        "z": "c84cf3b562c0c5b4",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://api.openweathermap.org/data/2.5/weather?q=Tiruchirappalli&units=metric&appid=391c3be8939938b107c85c5bfc0bd2b2",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 920,
        "wires": [
            [
                "39442d537e4de9ce"
            ]
        ]
    },
    {
        "id": "39442d537e4de9ce",
        "type": "json",
        "z": "c84cf3b562c0c5b4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 920,
        "wires": [
            [
                "7a5dbb4f5bcf1b50"
            ]
        ]
    },
    {
        "id": "7a5dbb4f5bcf1b50",
        "type": "function",
        "z": "c84cf3b562c0c5b4",
        "name": "function 3",
        "func": "const weatherData = msg.payload;\n\nconst T = weatherData.main.temp;            \nconst humidity = weatherData.main.humidity;  \nconst windSpeed = weatherData.wind.speed;    \nconst pressure = weatherData.main.pressure;  \n\nconst R_n = 0.002 * pressure * T + 0.1;      \nconst G = 0.05 * R_n;                        \n\nif (isNaN(R_n) || isNaN(G)) {\n    node.error(\"Invalid R_n or G calculation\");\n    return null;\n}\n\nmsg.payload = {\n    T: T,\n    u_2: windSpeed,\n    e_s: 0.6108 * Math.exp((17.27 * T) / (T + 237.3)), \n    e_a: (0.6108 * Math.exp((17.27 * T) / (T + 237.3))) * (humidity / 100), \n    Delta: (4098 * (0.6108 * Math.exp((17.27 * T) / (T + 237.3)))) / ((T + 237.3) ** 2), \n    gamma: 0.665 * (pressure / 1000), \n    R_n: R_n,\n    G: G,\n    humidity:humidity,\n    pressure:pressure\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 920,
        "wires": [
            [
                "4ed685e05bf494bd",
                "28550265d7d2736a",
                "11e684eebbab53f9",
                "d65f95eff51101bb",
                "d47cbc761418dad8"
            ]
        ]
    },
    {
        "id": "5de0240de940f33a",
        "type": "inject",
        "z": "c84cf3b562c0c5b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 920,
        "wires": [
            [
                "c8145ae9a2c0f24b"
            ]
        ]
    },
    {
        "id": "f751d9112b136502",
        "type": "function",
        "z": "c84cf3b562c0c5b4",
        "name": "function 4",
        "func": "const previousET0 = flow.get('previousET0') || 0;\nconst previousMoisture = flow.get('previousMoisture') || 0;\n\nconst et0 = msg.payload.ET0; \nconst soilMoisture = msg.payload.moisture; \n\nconst moistureThreshold = 30; \nconst irrigationRequiredThreshold = 5; \n\nconst waterDeficit = et0 - soilMoisture;\n\nlet irrigationNeeded = false;\nlet message = \"OFF_2\";\n\nif (soilMoisture < moistureThreshold || waterDeficit > irrigationRequiredThreshold) {\n    irrigationNeeded = true;\n    message = \"ON_2\";\n}\n\nconst et0Difference = et0 - previousET0;\nconst moistureDifference = soilMoisture - previousMoisture;\nnode.warn(`Previous ET0: ${previousET0}`);\nnode.warn(`Previous Moisture: ${previousMoisture}`);\nnode.warn(`Current ET0: ${et0}`);\nnode.warn(`Current Moisture: ${soilMoisture}`);\nnode.warn(`ET0 Difference: ${et0Difference}`);\nnode.warn(`Moisture Difference: ${moistureDifference}`);\n\nif (et0 > 0){\n    flow.set('previousET0', et0);\n}\nif (soilMoisture > 0){\n    flow.set('previousMoisture', soilMoisture);\n}\n\n\n/*msg.payload = {\n    previousET0: previousET0,\n    previousMoisture: previousMoisture,\n    currentET0: et0,\n    currentMoisture: soilMoisture,\n    waterDeficit: waterDeficit,\n    irrigationNeeded: irrigationNeeded,\n    message: message,\n    et0Difference: et0Difference,\n    moistureDifference: moistureDifference\n};*/\nmsg.payload = message;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 920,
        "wires": [
            [
                "a9eeefdb3acacce2",
                "fc0446fad57d02a9"
            ]
        ]
    },
    {
        "id": "fc0446fad57d02a9",
        "type": "debug",
        "z": "c84cf3b562c0c5b4",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 1020,
        "wires": []
    },
    {
        "id": "e6e716a573f78ece",
        "type": "function",
        "z": "c84cf3b562c0c5b4",
        "name": "moisture",
        "func": "var input = msg.payload; \nvar mean =0;\ninput = input.trim();\n\nvar values = input.split(',');\n\nvalues = values.map(function (value){\n    return parseFloat(value.trim());\n});\nmean = (values[4] +values[5]+ values[6]+values[7]+values[8])/5;\nvar analog_val = 4095-mean;\nvar persentage = (analog_val/4095)*100;\nvar moisture = persentage;\n\nmsg.payload = moisture; // set the output playload\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 740,
        "wires": [
            [
                "9a85c377228c3a12",
                "0164880eec79a9b0"
            ]
        ]
    },
    {
        "id": "28550265d7d2736a",
        "type": "function",
        "z": "c84cf3b562c0c5b4",
        "name": "open weather temperature",
        "func": "var temp= msg.payload.T;\nmsg.payload = temp;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1260,
        "wires": [
            [
                "9bbce052f2d3a063",
                "8ba72c55963823fa",
                "54f23721583206b9"
            ]
        ]
    },
    {
        "id": "9bbce052f2d3a063",
        "type": "debug",
        "z": "c84cf3b562c0c5b4",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 1320,
        "wires": []
    },
    {
        "id": "11e684eebbab53f9",
        "type": "function",
        "z": "c84cf3b562c0c5b4",
        "name": "open weather humidity",
        "func": "var temp= msg.payload.humidity;\nmsg.payload = temp;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1400,
        "wires": [
            [
                "3edeafc213e24ecb",
                "82266ecc53af6c1b",
                "6c3e4ad1096a7e65"
            ]
        ]
    },
    {
        "id": "a9eeefdb3acacce2",
        "type": "ui_switch",
        "z": "c84cf3b562c0c5b4",
        "name": "",
        "label": "valve_2_on/off",
        "tooltip": "",
        "group": "89cd642bb84fe23e",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "ON_2",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF_2",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1160,
        "y": 920,
        "wires": [
            [
                "c8ad76fc592839f4"
            ]
        ]
    },
    {
        "id": "9a85c377228c3a12",
        "type": "ui_gauge",
        "z": "c84cf3b562c0c5b4",
        "name": "",
        "group": "7b1f2ef96afda4ba",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Soil moisture",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 990,
        "y": 780,
        "wires": []
    },
    {
        "id": "8ba72c55963823fa",
        "type": "ui_gauge",
        "z": "c84cf3b562c0c5b4",
        "name": "",
        "group": "7b1f2ef96afda4ba",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature Gauge",
        "label": "Pa K−1",
        "format": "{{value}}",
        "min": 0,
        "max": "60",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "diff": false,
        "className": "",
        "x": 980,
        "y": 1240,
        "wires": []
    },
    {
        "id": "0164880eec79a9b0",
        "type": "ui_chart",
        "z": "c84cf3b562c0c5b4",
        "name": "",
        "group": "7b1f2ef96afda4ba",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "Soil Moisture CHART",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1020,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "54f23721583206b9",
        "type": "ui_chart",
        "z": "c84cf3b562c0c5b4",
        "name": "",
        "group": "7b1f2ef96afda4ba",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Temperature Chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 970,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "3edeafc213e24ecb",
        "type": "ui_gauge",
        "z": "c84cf3b562c0c5b4",
        "name": "",
        "group": "7b1f2ef96afda4ba",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humidity Gauge",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 940,
        "y": 1380,
        "wires": []
    },
    {
        "id": "82266ecc53af6c1b",
        "type": "ui_chart",
        "z": "c84cf3b562c0c5b4",
        "name": "",
        "group": "7b1f2ef96afda4ba",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "Humidity Chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 940,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "6c3e4ad1096a7e65",
        "type": "debug",
        "z": "c84cf3b562c0c5b4",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 1460,
        "wires": []
    },
    {
        "id": "d65f95eff51101bb",
        "type": "function",
        "z": "c84cf3b562c0c5b4",
        "name": "open weather wind speed",
        "func": "var temp= msg.payload.u_2;\nmsg.payload = temp;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1540,
        "wires": [
            [
                "ae6e5c47625b17ad",
                "f5cb5656cd16d124",
                "c8227207f97d2c70"
            ]
        ]
    },
    {
        "id": "ae6e5c47625b17ad",
        "type": "ui_gauge",
        "z": "c84cf3b562c0c5b4",
        "name": "",
        "group": "7b1f2ef96afda4ba",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "wind speed",
        "label": "m/s",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 930,
        "y": 1520,
        "wires": []
    },
    {
        "id": "f5cb5656cd16d124",
        "type": "ui_chart",
        "z": "c84cf3b562c0c5b4",
        "name": "",
        "group": "7b1f2ef96afda4ba",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "Humidity Chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 940,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "c8227207f97d2c70",
        "type": "debug",
        "z": "c84cf3b562c0c5b4",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 1600,
        "wires": []
    },
    {
        "id": "d47cbc761418dad8",
        "type": "function",
        "z": "c84cf3b562c0c5b4",
        "name": "open weather pressure",
        "func": "var temp= msg.payload.pressure;\nmsg.payload = temp;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1680,
        "wires": [
            [
                "954e8724a4f03a08",
                "8573b11df1778aee",
                "f90f130f8d178010"
            ]
        ]
    },
    {
        "id": "954e8724a4f03a08",
        "type": "ui_gauge",
        "z": "c84cf3b562c0c5b4",
        "name": "",
        "group": "7b1f2ef96afda4ba",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "pressure",
        "label": "hPa",
        "format": "{{value}}",
        "min": 0,
        "max": "1250",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 940,
        "y": 1660,
        "wires": []
    },
    {
        "id": "8573b11df1778aee",
        "type": "ui_chart",
        "z": "c84cf3b562c0c5b4",
        "name": "",
        "group": "7b1f2ef96afda4ba",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "Humidity Chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 960,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "f90f130f8d178010",
        "type": "debug",
        "z": "c84cf3b562c0c5b4",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 1740,
        "wires": []
    },
    {
        "id": "5c183cc1cd465b88",
        "type": "function",
        "z": "c84cf3b562c0c5b4",
        "name": "Evopration constant",
        "func": "var temp= msg.payload.ET0;\nvar et0 = parseFloat(temp.toFixed(2));\nmsg.payload = et0;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1120,
        "wires": [
            [
                "b7ce059adc4b48ad",
                "d24c211dee36e986",
                "5dcac4b11f0d6853"
            ]
        ]
    },
    {
        "id": "b7ce059adc4b48ad",
        "type": "debug",
        "z": "c84cf3b562c0c5b4",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 1180,
        "wires": []
    },
    {
        "id": "d24c211dee36e986",
        "type": "ui_gauge",
        "z": "c84cf3b562c0c5b4",
        "name": "",
        "group": "7b1f2ef96afda4ba",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Evoporation constant",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "60",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "diff": false,
        "className": "",
        "x": 1180,
        "y": 1100,
        "wires": []
    },
    {
        "id": "5dcac4b11f0d6853",
        "type": "ui_chart",
        "z": "c84cf3b562c0c5b4",
        "name": "",
        "group": "7b1f2ef96afda4ba",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Temperature Chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1170,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "bb0b5df2fcd96697",
        "type": "mqtt-broker",
        "name": "test.mosquitto.org",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "89cd642bb84fe23e",
        "type": "ui_group",
        "name": "water tank",
        "tab": "00e3d41e547370cc",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7b1f2ef96afda4ba",
        "type": "ui_group",
        "name": "SENSOR 2",
        "tab": "00e3d41e547370cc",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "00e3d41e547370cc",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]
